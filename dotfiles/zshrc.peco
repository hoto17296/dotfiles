# 履歴のインクリメンタルサーチ

function peco-history() {
  local tac
  executable tac \
    && tac="tac" \
    || tac="tail -r"
  BUFFER=$(history -n 1 | eval $tac | peco --query "$LBUFFER" --prompt "HISTORY>")
  CURSOR=$#BUFFER
}

zle -N peco-history
bindkey '^r' peco-history


# ファイル選択

function peco-path() {
  local filepath="$(find . | grep -v '/\.' | peco --prompt 'PATH>')"
  [ -z "$filepath" ] && return
  if [ -n "$LBUFFER" ]; then
    BUFFER="$LBUFFER$filepath"
  else
    if [ -d "$filepath" ]; then
      BUFFER="cd $filepath"
    elif [ -f "$filepath" ]; then
      BUFFER="$EDITOR $filepath"
    fi
  fi
  CURSOR=$#BUFFER
}

zle -N peco-path
bindkey '^f' peco-path


# ブランチ選択

function peco-branch() {
  local branch="$(git recent-branch 2> /dev/null | peco --prompt 'GIT BRANCH>')"
  [ -z "$branch" ] && return
  if [ -n "$LBUFFER" ]; then
    BUFFER="$LBUFFER$branch"
  else
    BUFFER="git checkout $branch"
  fi
  CURSOR=$#BUFFER
}

zle -N peco-branch
bindkey '^b' peco-branch


# git grep した結果を絞り込んでエディタで開く

function peco-git-grep() {
  inside-git-work-tree || return
  [ -z "$LBUFFER" ] && return
  local peco="$(\git grep -n "$LBUFFER" | peco --prompt 'GIT GREP>' 2> /dev/null)"
  [ -z "$peco" ] && return
  local file="$(echo $peco | cut -d':' -f1)"
  local line="$(echo $peco | cut -d':' -f2)"
  BUFFER="$EDITOR $file +$line"
  CURSOR=$#BUFFER
}

zle -N peco-git-grep
bindkey '^g' peco-git-grep


# プロセス一覧を peco で表示

function peco-ps() {
  # TODO 引数なしの場合のデフォルトオプション設定する
  # OSXの場合: aux, Linuxの場合: auxf
  \ps $@ | peco --prompt 'PROCESS>'
}

alias ps=peco-ps


# sshconfig からホスト一覧を取得して peco で表示

function peco-ssh() {
  local config="$HOME/.ssh/config"
  [ -f $config ] || return
  local host=$(grep "^\s*Host " $config | sed s/"[\s ]*Host "// | grep -v "^\*$" | sort | peco --prompt "SSH>")
  [ -z "$host" ] && return
  BUFFER="ssh $host"
  CURSOR=$#BUFFER
}

zle -N peco-ssh
bindkey '^s' peco-ssh

